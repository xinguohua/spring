<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--z注册一个Person对象，spring会自动创建这个person对象-->
    <!--一个Bean标签可以注册一个组件（对象、类）
    一个Bean标签可以注册一个组件（对象，类）
    class：要写注册的组件的全类名
    id 这个对象的唯一标识
    -->

    <bean id="person01" class="cn.tju.bean.Person">
        <!--使用property标签为person对象的属性赋值
        name 为属性名 value为属性值-->
        <property name="name" value="张三"></property>
        <property name="age" value="11" ></property>
        <property name="email" value="@qq.com"></property>
        <property name="gender" value="male"></property>
    </bean>

    <bean id="person02" class="cn.tju.bean.Person">
        <!--使用property标签为person对象的属性赋值
        name 为属性名 value为属性值-->
        <property name="name" value="张四"></property>
        <property name="age" value="11" ></property>
        <property name="email" value="@qq.com"></property>
        <property name="gender" value="male"></property>
    </bean>

    <bean id="person03" class="cn.tju.bean.Person">
        <!--public Person(String name, Integer age, String gender, String email)-->
        <constructor-arg name="name" value="xgh"></constructor-arg>
        <constructor-arg name="age" value="13"></constructor-arg>
        <constructor-arg name="email" value="@qq"></constructor-arg>
        <constructor-arg name="gender" value="male"></constructor-arg>
    </bean>


    <!-- 通过p名称空间为bean赋值；导入p名称空间 -->
    <!--名称空间：在xml中名称空间是用来防止标签重复的  -->
    <!--1)、导入p名称空间  2）、写带前缀的标签/属性  -->
    <!--
        <book>
            <b:name>西游记</b:name>
            <price>19.98</price>
            <author>
                <a:name>吴承恩</a:name>
                <gender>男</gender>
            </author>
        </book>

        带前缀的标签<c:forEach>		<jsp:forward>
      -->
    <bean id="person04" class="cn.tju.bean.Person"
        p:age="15" p:email="ee" p:name="ee" p:gender="male">
    </bean>
</beans>